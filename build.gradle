plugins {
    id "babric-loom" version "1.4-SNAPSHOT"
    id "maven-publish"
}

version = project.mod_version
group = project.maven_group

loom {
    gluedMinecraftJar()
    customMinecraftManifest.set("https://babric.github.io/manifest-polyfill/${minecraft_version}.json")
    intermediaryUrl.set("https://maven.glass-launcher.net/babric/babric/intermediary/%1\$s/intermediary-%1\$s-v2.jar")
    
    accessWidenerPath = file("src/main/resources/zume.accesswidener")
}

repositories {
    mavenCentral()
    maven {
        name = "Babric"
        url = "https://maven.glass-launcher.net/babric"
    }
    maven {
        name = "Glass Releases"
        url = "https://maven.glass-launcher.net/releases"
    }
    maven {
        name = "Glass Snapshots"
        url = "https://maven.glass-launcher.net/snapshots"
    }
    maven {
        name = "Forge"
        url = "https://maven.minecraftforge.net/"
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven { url "https://jitpack.io/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.glasslauncher:biny:${project.biny_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.modificationstation:StationAPI:${project.station_api_version}"
    
    include(implementation("blue.endless:jankson:${project.jankson_version}"))

    implementation "org.slf4j:slf4j-api:1.8.0-beta4"
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.16.0"

    annotationProcessor "com.github.bsideup.jabel:jabel-javac-plugin:${project.jabel_version}"
    compileOnly "com.github.bsideup.jabel:jabel-javac-plugin:${project.jabel_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    it.sourceCompatibility = 17 // for the IDE support
    it.options.release = 8

    it.javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

java {
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
