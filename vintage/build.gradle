plugins {
	id "java-library"
	id "com.gtnewhorizons.retrofuturagradle"
}

// Set the toolchain version to decouple the Java we run Gradle with from the Java used to compile and run the mod
java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(8))
		// Azul covers the most platforms for Java 8 toolchains, crucially including MacOS arm64
		vendor.set(org.gradle.jvm.toolchain.JvmVendorSpec.AZUL)
	}
}

minecraft {
	mcVersion.set(vintage_minecraft_version)
	username.set("Developer")

	injectedTags.put("MOD_VERSION", mod_version)
	injectedTags.put("MOD_NAME", "Zume")
	injectedTags.put("VERSION_RANGE", vintage_minecraft_range)
}

tasks.injectTags.outputClassName.set("${maven_group}.zume.vintage.Tags")

repositories {
	maven {	url "https://maven.cleanroommc.com" }
}

dependencies {
	annotationProcessor "org.ow2.asm:asm-debug-all:5.2"
	annotationProcessor "com.google.guava:guava:32.1.2-jre"
	annotationProcessor "com.google.code.gson:gson:2.8.9"

	def mixinBooter = modUtils.enableMixins("zone.rong:mixinbooter:8.9", "zume-vintage-refmap.json")
	api (mixinBooter) {
		transitive = false
	}
	annotationProcessor (mixinBooter) {
		transitive = false
	}

	implementation "blue.endless:jankson:${jankson_version}"

	implementation(project(":common"))
}

jar {
	manifest {
		attributes (
			"FMLCorePluginContainsFMLMod": true,
			"ForceLoadAsMod": true,
			"MixinConfigs": "zume-vintage.mixins.json",
			"TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
		)
	}
}

processResources {
	from "common/src/main/resources"
}
