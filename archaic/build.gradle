plugins {
	id "java-library"
	id "com.gtnewhorizons.retrofuturagradle" version "1.3.25"
}

// Set the toolchain version to decouple the Java we run Gradle with from the Java used to compile and run the mod
java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(8))
		// Azul covers the most platforms for Java 8 toolchains, crucially including MacOS arm64
		vendor.set(org.gradle.jvm.toolchain.JvmVendorSpec.AZUL)
	}
}

minecraft {
	mcVersion.set(archaic_minecraft_version)
	username.set("Developer")

	injectedTags.put("MOD_VERSION", mod_version)
	injectedTags.put("MOD_NAME", "Zume")
	injectedTags.put("VERSION_RANGE", archaic_minecraft_range)
}

tasks.injectTags.outputClassName.set("${maven_group}.zume.archaic.Tags")

def mixinProviderSpec = "com.github.LegacyModdingMC.UniMixins:unimixins-all-1.7.10:${unimixins_version}:dev"

dependencies {	
	implementation(annotationProcessor(modUtils.enableMixins(mixinProviderSpec, "zume-archaic-refmap.json")))

	implementation "blue.endless:jankson:${jankson_version}"

	implementation(project(":common"))
}

jar {
	manifest {
		attributes (
			"FMLCorePluginContainsFMLMod": true,
			"ForceLoadAsMod": true,
			"MixinConfigs": "zume-archaic.mixins.json",
			"TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
		)
	}
}

processResources {
	from "common/src/main/resources"
}
